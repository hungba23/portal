(self.webpackChunkdevportal=self.webpackChunkdevportal||[]).push([[2653],{4137:function(e,t,n){"use strict";n.d(t,{Zo:function(){return d},kt:function(){return u}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),m=p(n),u=o,h=m["".concat(s,".").concat(u)]||m[u]||c[u]||i;return n?a.createElement(h,l(l({ref:t},d),{},{components:n})):a.createElement(h,l({ref:t},d))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,l=new Array(i);l[0]=m;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r.mdxType="string"==typeof e?e:o,l[1]=r;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7692:function(e,t,n){"use strict";n.r(t),n.d(t,{contentTitle:function(){return m},default:function(){return g},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return h}});var a=n(2122),o=n(9756),i=n(7294),l=n(4137),r=n(3552),s=function(e){var t=e.children,n=e.id;return i.createElement("a",{href:"https://hydra.iohk.io/build/"+n},t)},p=function(e){var t=e.children,n=e.id;return i.createElement("li",null,i.createElement(s,{id:n},t))},d=function(e){function t(t){var n,a=t.latest,o=t.linux,i=t.macos,l=t.win64;return(n=e.call(this)||this).state={isCurrent:!1,hasErrors:!1,latest:a,linux:o,macos:i,win64:l},n}(0,r.Z)(t,e);var n=t.prototype;return n.componentDidMount=function(){var e=this;fetch("https://api.github.com/repos/input-output-hk/cardano-node/releases/latest").then((function(e){return e.json()})).then((function(e){return e.body.match(/.*Hydra binaries]\((.*)#tabs-constituents\).*/)[1]})).then((function(t){var n=t.match(/\d+/)==e.state.latest;return e.setState(Object.assign({},e.state.isCurrent,{isCurrent:n})),t})).then((function(t){var n=t.match(/\d+.*/)+"#tabs-constituents";e.setState(Object.assign({},e.state.latest,{latest:n}))})).catch((function(t){e.setState({err:t,hasErrors:!0})}))},n.render=function(){return i.createElement(i.Fragment,null,i.createElement("ul",null,i.createElement(p,{id:this.state.linux},"Linux"),i.createElement(p,{id:this.state.macos},"MacOS"),i.createElement(p,{id:this.state.win64},"Windows")),this.state.isCurrent?i.createElement(i.Fragment,null):i.createElement("p",null,"There are newer binaries available: ",i.createElement("ul",null,i.createElement(p,{id:this.state.latest},"latest release"))))},t}(i.Component),c={id:"installing-cardano-node",title:"Installing cardano-node and cardano-cli from source",sidebar_label:"Installing cardano-node",description:"This guide shows how to build and install the cardano-node and cardano-cli from the source-code for all major Operating Systems",image:"./img/og-developer-portal.png"},m=void 0,u={unversionedId:"get-started/installing-cardano-node",id:"get-started/installing-cardano-node",isDocsHomePage:!1,title:"Installing cardano-node and cardano-cli from source",description:"This guide shows how to build and install the cardano-node and cardano-cli from the source-code for all major Operating Systems",source:"@site/docs/get-started/installing-cardano-node.md",sourceDirName:"get-started",slug:"/get-started/installing-cardano-node",permalink:"/docs/get-started/installing-cardano-node",editUrl:"https://github.com/cardano-foundation/developer-portal/edit/staging/docs/get-started/installing-cardano-node.md",tags:[],version:"current",lastUpdatedBy:"Alexander Klee",lastUpdatedAt:1632266394,formattedLastUpdatedAt:"9/22/2021",frontMatter:{id:"installing-cardano-node",title:"Installing cardano-node and cardano-cli from source",sidebar_label:"Installing cardano-node",description:"This guide shows how to build and install the cardano-node and cardano-cli from the source-code for all major Operating Systems",image:"./img/og-developer-portal.png"},sidebar:"someSidebar",previous:{title:"Overview",permalink:"/docs/get-started/cardano-components"},next:{title:"Running cardano-node",permalink:"/docs/get-started/running-cardano"}},h=[{value:"Overview",id:"overview",children:[]},{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Choose your Platform",id:"choose-your-platform",children:[]},{value:"Linux",id:"linux",children:[]},{value:"MacOS",id:"macos",children:[]},{value:"Windows",id:"windows",children:[]}],k={toc:h};function g(e){var t=e.components,n=(0,o.Z)(e,["components"]);return(0,l.kt)("wrapper",(0,a.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h3",{id:"overview"},"Overview"),(0,l.kt)("p",null,"This guide will show you how to compile and install the ",(0,l.kt)("inlineCode",{parentName:"p"},"cardano-node")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"cardano-cli")," into your operating system of choice, directly from the source-code. It will enable you to interact with the ",(0,l.kt)("strong",{parentName:"p"},"Cardano")," blockchain, including but not limited to sending/receiving ",(0,l.kt)("strong",{parentName:"p"},"transactions"),", creating ",(0,l.kt)("strong",{parentName:"p"},"NFTs"),", posting transaction ",(0,l.kt)("strong",{parentName:"p"},"metadata")," into the blockchain, minting/burning ",(0,l.kt)("strong",{parentName:"p"},"native tokens"),", creating a ",(0,l.kt)("strong",{parentName:"p"},"stake pool"),", executing ",(0,l.kt)("strong",{parentName:"p"},"smart contracts"),", and so much more!"),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"If you want to avoid compiling the binaries yourself, you can download the latest versions of ",(0,l.kt)("inlineCode",{parentName:"p"},"cardano-node")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"cardano-cli")," from the links below."),(0,l.kt)(d,{latest:"7408469",linux:"7408438",macos:"7408630",win64:"7408538",mdxType:"HydraBuildList"}),(0,l.kt)("p",{parentName:"div"},"The components can be built and run on ",(0,l.kt)("strong",{parentName:"p"},"Windows")," and ",(0,l.kt)("strong",{parentName:"p"},"MacOS"),", but we recommend that stake pool operators use ",(0,l.kt)("strong",{parentName:"p"},"Linux")," in production to take advantage of the associated performance advantages."))),(0,l.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,l.kt)("p",null,"To set up the components, you will need:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Windows"),", ",(0,l.kt)("strong",{parentName:"li"},"MacOS"),", or ",(0,l.kt)("strong",{parentName:"li"},"Linux")," for your operating system"),(0,l.kt)("li",{parentName:"ul"},"A ",(0,l.kt)("strong",{parentName:"li"},"CPU")," with at least ",(0,l.kt)("strong",{parentName:"li"},"two")," cores"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"8GB")," of RAM and at least ",(0,l.kt)("strong",{parentName:"li"},"10GB")," of free disk space")),(0,l.kt)("h3",{id:"choose-your-platform"},"Choose your Platform"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#linux"},"Linux")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#macos"},"MacOS")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#windows"},"Windows"))),(0,l.kt)("h2",{id:"linux"},"Linux"),(0,l.kt)("p",null,"In this section, we will walk you through the process of downloading, compiling, and installing ",(0,l.kt)("inlineCode",{parentName:"p"},"cardano-node")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"cardano-cli")," into your ",(0,l.kt)("strong",{parentName:"p"},"Linux-based")," operating system. "),(0,l.kt)("h4",{id:"installing-operating-system-dependencies"},"Installing Operating System dependencies"),(0,l.kt)("p",null,"To download the source code and build it, you need the following packages and tools on your Linux system:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"the version control system ",(0,l.kt)("inlineCode",{parentName:"li"},"git"),","),(0,l.kt)("li",{parentName:"ul"},"the ",(0,l.kt)("inlineCode",{parentName:"li"},"gcc")," C-compiler,"),(0,l.kt)("li",{parentName:"ul"},"C++ support for ",(0,l.kt)("inlineCode",{parentName:"li"},"gcc"),","),(0,l.kt)("li",{parentName:"ul"},"developer libraries for the arbitrary precision library ",(0,l.kt)("inlineCode",{parentName:"li"},"gmp"),","),(0,l.kt)("li",{parentName:"ul"},"developer libraries for the compression library ",(0,l.kt)("inlineCode",{parentName:"li"},"zlib"),","),(0,l.kt)("li",{parentName:"ul"},"developer libraries for ",(0,l.kt)("inlineCode",{parentName:"li"},"systemd"),","),(0,l.kt)("li",{parentName:"ul"},"developer libraries for ",(0,l.kt)("inlineCode",{parentName:"li"},"ncurses"),","),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ncurses")," compatibility libraries,"),(0,l.kt)("li",{parentName:"ul"},"the Haskell build tool ",(0,l.kt)("inlineCode",{parentName:"li"},"cabal"),","),(0,l.kt)("li",{parentName:"ul"},"the GHC Haskell compiler (version ",(0,l.kt)("inlineCode",{parentName:"li"},"8.10.4")," or above).")),(0,l.kt)("p",null,"In Redhat, Fedora, and Centos:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo yum update -y\nsudo yum install git gcc gcc-c++ tmux gmp-devel make tar xz wget zlib-devel libtool autoconf -y\nsudo yum install systemd-devel ncurses-devel ncurses-compat-libs -y\n")),(0,l.kt)("p",null,"For Debian/Ubuntu, use the following instead:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get update -y\nsudo apt-get install automake build-essential pkg-config libffi-dev libgmp-dev libssl-dev libtinfo-dev libsystemd-dev zlib1g-dev make g++ tmux git jq wget libncursesw5 libtool autoconf -y\n")),(0,l.kt)("p",null,"If you are using a different flavor of Linux, you will need to use the correct package manager for your platform instead of ",(0,l.kt)("inlineCode",{parentName:"p"},"yum")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"apt-get"),", and the names of the packages you need to install might differ."),(0,l.kt)("h4",{id:"installing-ghc-and-cabal"},"Installing GHC and Cabal"),(0,l.kt)("p",null,"The fastest way to install ",(0,l.kt)("strong",{parentName:"p"},"GHC")," (Glassglow Haskell Compiler) and ",(0,l.kt)("strong",{parentName:"p"},"Cabal")," (Common Architecture for Building Applications and Libraries) is to use ",(0,l.kt)("a",{parentName:"p",href:"https://www.haskell.org/ghcup"},"ghcup"),"."),(0,l.kt)("p",null,"Use the following command to install ",(0,l.kt)("inlineCode",{parentName:"p"},"ghcup")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | sh\n")),(0,l.kt)("p",null,"Please follow the instructions and provide the necessary input to the installer. Once complete, you should have ",(0,l.kt)("inlineCode",{parentName:"p"},"ghc")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"cabal")," installed to your system."),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},(0,l.kt)("inlineCode",{parentName:"p"},"ghcup")," will try to detect your shell and ask you to add it to the environment variables. Please restart your shell/terminal after installing ",(0,l.kt)("inlineCode",{parentName:"p"},"ghcup")))),(0,l.kt)("p",null,"You can check if ",(0,l.kt)("inlineCode",{parentName:"p"},"ghcup")," has been installed correctly by typing ",(0,l.kt)("inlineCode",{parentName:"p"},"ghcup --version")," into the terminal. You should see something similar to the following: "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"The GHCup Haskell installer, version v0.1.14.1\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"ghcup")," will install the latest stable version of ",(0,l.kt)("inlineCode",{parentName:"p"},"ghc"),". However, as of the time of writing this, ",(0,l.kt)("a",{parentName:"p",href:"https://iohk.io"},"Input-Output")," recommends using ",(0,l.kt)("inlineCode",{parentName:"p"},"ghc 8.10.4"),". So, we will use ",(0,l.kt)("inlineCode",{parentName:"p"},"ghcup")," to install and switch to the required version. "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ghcup install ghc 8.10.4\nghcup set ghc 8.10.4\n")),(0,l.kt)("p",null,"Finally, we check if we have the correct ",(0,l.kt)("inlineCode",{parentName:"p"},"ghc")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"cabal")," versions installed."),(0,l.kt)("p",null,"Check ",(0,l.kt)("inlineCode",{parentName:"p"},"ghc")," version: "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ghc --version\n")),(0,l.kt)("p",null,"You should see something like this: "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"The Glorious Glasgow Haskell Compilation System, version 8.10.4\n")),(0,l.kt)("p",null,"Check ",(0,l.kt)("inlineCode",{parentName:"p"},"cabal")," version: "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cabal --version\n")),(0,l.kt)("p",null,"You should see something like this: "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"cabal-install version 3.4.0.0\ncompiled using version 3.4.0.0 of the Cabal library\n")),(0,l.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Please confirm that the versions you have installed match the recommended versions above. If not, check if you have missed any of the previous steps."))),(0,l.kt)("h4",{id:"downloading--compiling"},"Downloading & Compiling"),(0,l.kt)("p",null,"Let's create a working directory to store the source-code and builds for the components."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p ~/cardano-src\ncd ~/cardano-src\n")),(0,l.kt)("p",null,"Next, we will download, compile and install ",(0,l.kt)("inlineCode",{parentName:"p"},"libsodium"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/input-output-hk/libsodium\ncd libsodium\ngit checkout 66f017f1\n./autogen.sh\n./configure\nmake\nsudo make install\n")),(0,l.kt)("p",null,"Then we will add the following environment variables to your shell profile. E.G ",(0,l.kt)("inlineCode",{parentName:"p"},"~/.zshrc")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"~/.bashrc")," depending on what shell application you are using. Add the following to the bottom of your shell profile/config file so that the compiler can be aware that ",(0,l.kt)("inlineCode",{parentName:"p"},"libsodium")," is installed on your system."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'export LD_LIBRARY_PATH="/usr/local/lib:$LD_LIBRARY_PATH"\nexport PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH"\n')),(0,l.kt)("p",null,"Once saved, we will then reload your shell profile to use the new variables. We can do that by typing ",(0,l.kt)("inlineCode",{parentName:"p"},"source ~/.bashrc")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"source ~/.zshrc")," (",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"depending on the shell application you use")),")."),(0,l.kt)("p",null,"Now we are ready to download, compile and install ",(0,l.kt)("inlineCode",{parentName:"p"},"cardano-node")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"cardano-cli"),". But first, we have to make sure we are back at the root of our working directory:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~/cardano-src\n")),(0,l.kt)("p",null,"Download the ",(0,l.kt)("inlineCode",{parentName:"p"},"cardano-node")," repository: "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/input-output-hk/cardano-node.git\ncd cardano-node\ngit fetch --all --recurse-submodules --tags\n")),(0,l.kt)("p",null,"Switch the repository to the latest tagged commit: "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git checkout tags/1.27.0\n")),(0,l.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"You can check the latest available version/tag by visiting the ",(0,l.kt)("inlineCode",{parentName:"p"},"cardano-node")," ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/cardano-node/releases"},"Github Release")," page. At the time of writing this, the current version is ",(0,l.kt)("inlineCode",{parentName:"p"},"1.27.0"),"."))),(0,l.kt)("h4",{id:"configuring-the-build-options"},"Configuring the build options"),(0,l.kt)("p",null,"We explicitly use the ",(0,l.kt)("inlineCode",{parentName:"p"},"ghc")," version that we installed earlier. This avoids defaulting to a system version of ",(0,l.kt)("inlineCode",{parentName:"p"},"ghc")," that might be newer or older than the one you have installed."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cabal configure --with-compiler=ghc-8.10.4\n")),(0,l.kt)("p",null,"Update the local project file to use ",(0,l.kt)("inlineCode",{parentName:"p"},"libsodium")," that you installed earlier."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'echo "package cardano-crypto-praos" >>  cabal.project.local\necho "  flags: -external-libsodium-vrf" >>  cabal.project.local\n')),(0,l.kt)("h4",{id:"building-and-installing-the-node"},"Building and installing the node"),(0,l.kt)("p",null,"We can now build the ",(0,l.kt)("inlineCode",{parentName:"p"},"Haskell-based")," ",(0,l.kt)("inlineCode",{parentName:"p"},"cardano-node")," to produce executable binaries."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cabal build all\n")),(0,l.kt)("p",null,"Install the newly built node and CLI commands to the ~/.local/bin directory:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'mkdir -p ~/.local/bin\ncp -p "$(./scripts/bin-path.sh cardano-node)" ~/.local/bin/\ncp -p "$(./scripts/bin-path.sh cardano-cli)" ~/.local/bin/\n')),(0,l.kt)("p",null,"We have to add this line below our shell profile so that the shell/terminal can recognize that ",(0,l.kt)("inlineCode",{parentName:"p"},"cardano-node")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"cardano-cli")," are global commands. (",(0,l.kt)("inlineCode",{parentName:"p"},"~/.zshrc")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"~/.bashrc")," ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"depending on the shell application you use")),")"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'export PATH="~/.local/bin/:$PATH"\n')),(0,l.kt)("p",null,"Once saved, reload your shell profile by typing ",(0,l.kt)("inlineCode",{parentName:"p"},"source ~/.zshrc")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"source ~/.bashrc")," (",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"depending on the shell application you use")),")."),(0,l.kt)("p",null,"Check the version that has been installed:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"cardano-cli --version\ncardano-node --version\n")),(0,l.kt)("p",null,"Congratulations, you have successfully installed Cardano components into your Linux system! \ud83c\udf89\ud83c\udf89\ud83c\udf89"),(0,l.kt)("p",null,"Next, we will talk about how to ",(0,l.kt)("a",{parentName:"p",href:"/docs/get-started/running-cardano"},"run cardano-node"),"."),(0,l.kt)("h2",{id:"macos"},"MacOS"),(0,l.kt)("p",null,"In this section, we will walk you through the process of downloading, compiling, and installing ",(0,l.kt)("inlineCode",{parentName:"p"},"cardano-node")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"cardano-cli")," into your ",(0,l.kt)("strong",{parentName:"p"},"MacOS-based")," operating system. "),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Please note that this guide only supports ",(0,l.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Mac_transition_to_Intel_processors"},"Intel-based Apple MacOS")," hardware. ",(0,l.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Apple_M1"},"Apple Silicon (M1)")," hardware guide is still in progress."))),(0,l.kt)("h4",{id:"installing-operating-system-dependencies-1"},"Installing Operating System dependencies"),(0,l.kt)("p",null,"To download the source code and build it, you need the following packages and tools on your MacOS system:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://developer.apple.com/xcode"},"Xcode")," - The Apple Development IDE and SDK/Tools"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://developer.apple.com/xcode/features/"},"Xcode Command Line Tools"),", you can install it by typing ",(0,l.kt)("inlineCode",{parentName:"li"},"xcode-select --install")," in the terminal."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://brew.sh"},"Homebrew")," - The Missing Package Manager for MacOS (or Linux)")),(0,l.kt)("h4",{id:"installing-homebrew-packages"},"Installing Homebrew packages"),(0,l.kt)("p",null,"For the ",(0,l.kt)("inlineCode",{parentName:"p"},"cardano-node")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"cardano-cli")," components to compile properly, we will need to install some libraries via ",(0,l.kt)("inlineCode",{parentName:"p"},"brew"),": "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"brew install jq\nbrew install libtool\nbrew install autoconf\nbrew install automake\nbrew install pkg-config\n")),(0,l.kt)("h4",{id:"installing-ghc-and-cabal-1"},"Installing GHC and Cabal"),(0,l.kt)("p",null,"The fastest way to install ",(0,l.kt)("strong",{parentName:"p"},"GHC")," (Glassglow Haskell Compiler) and ",(0,l.kt)("strong",{parentName:"p"},"Cabal")," (Common Architecture for Building Applications and Libraries) is to use ",(0,l.kt)("a",{parentName:"p",href:"https://www.haskell.org/ghcup"},"ghcup"),"."),(0,l.kt)("p",null,"Use the following command to install ",(0,l.kt)("inlineCode",{parentName:"p"},"ghcup")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | sh\n")),(0,l.kt)("p",null,"Please follow the instructions and provide the necessary input to the installer. Once complete, you should have ",(0,l.kt)("inlineCode",{parentName:"p"},"ghc")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"cabal")," installed on your system."),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},(0,l.kt)("inlineCode",{parentName:"p"},"ghcup")," will try to detect your shell and will ask you to add it to the environment variables. Please restart your shell/terminal after installing ",(0,l.kt)("inlineCode",{parentName:"p"},"ghcup")))),(0,l.kt)("p",null,"You can check if ",(0,l.kt)("inlineCode",{parentName:"p"},"ghcup")," has been installed properly by typing ",(0,l.kt)("inlineCode",{parentName:"p"},"ghcup --version")," into the terminal. You should see something similar to the following: "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"The GHCup Haskell installer, version v0.1.14.1\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"ghcup")," will install the latest stable version of ",(0,l.kt)("inlineCode",{parentName:"p"},"ghc"),". However, as of the time writing this, ",(0,l.kt)("a",{parentName:"p",href:"https://iohk.io"},"Input-Output")," recommends using ",(0,l.kt)("inlineCode",{parentName:"p"},"ghc 8.10.4"),". So, we will use ",(0,l.kt)("inlineCode",{parentName:"p"},"ghcup")," to install and switch to the required version. "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ghcup install ghc 8.10.4\nghcup set ghc 8.10.4\n")),(0,l.kt)("p",null,"Finally, we check if we have the correct ",(0,l.kt)("inlineCode",{parentName:"p"},"ghc")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"cabal")," versions installed."),(0,l.kt)("p",null,"Check ",(0,l.kt)("inlineCode",{parentName:"p"},"ghc")," version: "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ghc --version\n")),(0,l.kt)("p",null,"You should see something like this: "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"The Glorious Glasgow Haskell Compilation System, version 8.10.4\n")),(0,l.kt)("p",null,"Check ",(0,l.kt)("inlineCode",{parentName:"p"},"cabal")," version: "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cabal --version\n")),(0,l.kt)("p",null,"You should see something like this: "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"cabal-install version 3.4.0.0\ncompiled using version 3.4.0.0 of the Cabal library\n")),(0,l.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Please confirm that the versions you have installed matches the recommended versions above. If not, check if you have missed any of the previous steps."))),(0,l.kt)("h4",{id:"downloading--compiling-1"},"Downloading & Compiling"),(0,l.kt)("p",null,"Let's create a working directory to store the source-code and builds for the components."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p ~/cardano-src\ncd ~/cardano-src\n")),(0,l.kt)("p",null,"Next, we will download, compile and install ",(0,l.kt)("inlineCode",{parentName:"p"},"libsodium"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/input-output-hk/libsodium\ncd libsodium\ngit checkout 66f017f1\n./autogen.sh\n./configure\nmake\nsudo make install\n")),(0,l.kt)("p",null,"Then we will add the following environment variables to your shell profile. E.G ",(0,l.kt)("inlineCode",{parentName:"p"},"~/.zshrc")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"~/.bashrc")," depending on what shell application you are using. Add the following to the bottom of your shell profile/config file so the compiler can be aware that ",(0,l.kt)("inlineCode",{parentName:"p"},"libsodium")," is installed on your system."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'export LD_LIBRARY_PATH="/usr/local/lib:$LD_LIBRARY_PATH"\nexport PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH"\n')),(0,l.kt)("p",null,"Once saved, we will then reload your shell profile to use the new variables. We can do that by typing ",(0,l.kt)("inlineCode",{parentName:"p"},"source ~/.bashrc")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"source ~/.zshrc")," (",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"depending on the shell application you use")),")."),(0,l.kt)("p",null,"Now we are ready to download, compile and install ",(0,l.kt)("inlineCode",{parentName:"p"},"cardano-node")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"cardano-cli"),". But first, we have to make sure we are back at the root of our working directory:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~/cardano-src\n")),(0,l.kt)("p",null,"Download the ",(0,l.kt)("inlineCode",{parentName:"p"},"cardano-node")," repository: "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/input-output-hk/cardano-node.git\ncd cardano-node\ngit fetch --all --recurse-submodules --tags\n")),(0,l.kt)("p",null,"Switch the repository to the latest tagged commit: "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git checkout tags/1.27.0\n")),(0,l.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"You can check the latest available version / tag by visiting the ",(0,l.kt)("inlineCode",{parentName:"p"},"cardano-node")," ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/cardano-node/releases"},"Github Release")," page. At the time of writing this, the current version is ",(0,l.kt)("inlineCode",{parentName:"p"},"1.27.0"),"."))),(0,l.kt)("h5",{id:"configuring-the-build-options-1"},"Configuring the build options"),(0,l.kt)("p",null,"We explicitly use the ",(0,l.kt)("inlineCode",{parentName:"p"},"ghc")," version that we installed earlier. This avoids defaulting to a system version of ",(0,l.kt)("inlineCode",{parentName:"p"},"ghc")," that might be newer or older than the one you have installed."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cabal configure --with-compiler=ghc-8.10.4\n")),(0,l.kt)("p",null,"Update the local project file to use ",(0,l.kt)("inlineCode",{parentName:"p"},"libsodium")," that you installed earlier."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'echo "package cardano-crypto-praos" >>  cabal.project.local\necho "  flags: -external-libsodium-vrf" >>  cabal.project.local\n')),(0,l.kt)("h4",{id:"building-and-installing-the-node-1"},"Building and installing the node"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cabal build all\n")),(0,l.kt)("p",null,"Install the newly built node and CLI to the ~/.local/bin directory:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'mkdir -p ~/.local/bin\ncp -p "$(./scripts/bin-path.sh cardano-node)" ~/.local/bin/\ncp -p "$(./scripts/bin-path.sh cardano-cli)" ~/.local/bin/\n')),(0,l.kt)("p",null,"We have to add this line below our shell profile so that the shell/terminal can recognize that ",(0,l.kt)("inlineCode",{parentName:"p"},"cardano-node")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"cardano-cli")," are global commands. (",(0,l.kt)("inlineCode",{parentName:"p"},"~/.zshrc")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"~/.bashrc")," ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"depending on the shell application you use")),")"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'export PATH="~/.local/bin/:$PATH"\n')),(0,l.kt)("p",null,"Once saved, reload your shell profile by typing ",(0,l.kt)("inlineCode",{parentName:"p"},"source ~/.zshrc")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"source ~/.bashrc")," (",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"depending on the shell application you use")),")."),(0,l.kt)("p",null,"Check the version that has been installed:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"cardano-cli --version\ncardano-node --version\n")),(0,l.kt)("p",null,"Congratulations, you have successfully installed Cardano components into your MacOS system! \ud83c\udf89\ud83c\udf89\ud83c\udf89"),(0,l.kt)("p",null,"Next, we will talk about how to ",(0,l.kt)("a",{parentName:"p",href:"/docs/get-started/running-cardano"},"run cardano-node"),"."),(0,l.kt)("h2",{id:"windows"},"Windows"),(0,l.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Currently, the ",(0,l.kt)("strong",{parentName:"p"},"Windows")," installation guide is still in progress. In the meantime, we recommend using ",(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/windows/wsl/"},"WSL (Windows Subsystem for Linux)")," to get a Linux environment on top of Windows. Once installed, you can use the ",(0,l.kt)("a",{parentName:"p",href:"#linux"},"Linux")," guide to install and run ",(0,l.kt)("inlineCode",{parentName:"p"},"cardano-node")," within ",(0,l.kt)("strong",{parentName:"p"},"WSL"),"."))))}g.isMDXComponent=!0}}]);