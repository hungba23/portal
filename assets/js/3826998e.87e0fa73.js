(self.webpackChunkdevportal=self.webpackChunkdevportal||[]).push([[772],{4137:function(e,t,a){"use strict";a.d(t,{Zo:function(){return p},kt:function(){return h}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(a),h=r,m=d["".concat(s,".").concat(h)]||d[h]||c[h]||i;return a?n.createElement(m,o(o({ref:t},p),{},{components:a})):n.createElement(m,o({ref:t},p))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var u=2;u<i;u++)o[u]=a[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},1134:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return u},default:function(){return c}});var n=a(2122),r=a(9756),i=(a(7294),a(4137)),o={id:"overview",title:"Get Started with Cardano Serialization Lib",sidebar_label:"Overview",description:"Get Started with Cardano Serialization Lib",image:"./img/og-developer-portal.png"},l=void 0,s={unversionedId:"get-started/cardano-serialization-lib/overview",id:"get-started/cardano-serialization-lib/overview",isDocsHomePage:!1,title:"Get Started with Cardano Serialization Lib",description:"Get Started with Cardano Serialization Lib",source:"@site/docs/get-started/cardano-serialization-lib/overview.md",sourceDirName:"get-started/cardano-serialization-lib",slug:"/get-started/cardano-serialization-lib/overview",permalink:"/docs/get-started/cardano-serialization-lib/overview",editUrl:"https://github.com/cardano-foundation/developer-portal/edit/staging/docs/get-started/cardano-serialization-lib/overview.md",tags:[],version:"current",lastUpdatedBy:"Daniel Koman",lastUpdatedAt:1629896166,formattedLastUpdatedAt:"8/25/2021",frontMatter:{id:"overview",title:"Get Started with Cardano Serialization Lib",sidebar_label:"Overview",description:"Get Started with Cardano Serialization Lib",image:"./img/og-developer-portal.png"},sidebar:"someSidebar",previous:{title:"CardanoSharp Wallet",permalink:"/docs/get-started/cardanosharp-wallet"},next:{title:"Prerequisite knowledge",permalink:"/docs/get-started/cardano-serialization-lib/prerequisite-knowledge"}},u=[{value:"How can you use this library",id:"how-can-you-use-this-library",children:[{value:"NPM packages",id:"npm-packages",children:[]},{value:"Mobile bindings",id:"mobile-bindings",children:[]}]},{value:"Benefits of using this library",id:"benefits-of-using-this-library",children:[]},{value:"Documentation",id:"documentation",children:[]},{value:"What about other versions of Cardano?",id:"what-about-other-versions-of-cardano",children:[]},{value:"Original binary specifications",id:"original-binary-specifications",children:[]},{value:"Building",id:"building",children:[]},{value:"Testing",id:"testing",children:[]},{value:"Publishing",id:"publishing",children:[]}],p={toc:u};function c(e){var t=e.components,a=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This is a library for serialization & deserialization of data structures\nused in Cardano\u2019s Haskell implementation of Shelley along with useful\nutility functions."),(0,i.kt)("h2",{id:"how-can-you-use-this-library"},"How can you use this library"),(0,i.kt)("p",null,"Rust is wonderfully portable! You can easily bind to the native Rust\nlibrary from any common programming language (even C and WebAssembly)!"),(0,i.kt)("h3",{id:"npm-packages"},"NPM packages"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/@emurgo/cardano-serialization-lib-nodejs"},"NodeJS WASM package")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/@emurgo/cardano-serialization-lib-browser"},"Browser (chrome/firefox) WASM package")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/@emurgo/cardano-serialization-lib-asmjs"},"Browser (pure JS - no WASM) ASM.js package"))),(0,i.kt)("h3",{id:"mobile-bindings"},"Mobile bindings"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/Emurgo/react-native-haskell-shelley"},"React-Native mobile bindings"))),(0,i.kt)("h2",{id:"benefits-of-using-this-library"},"Benefits of using this library"),(0,i.kt)("p",null,"Serialization/deserialization code is automatically generated from\nCardano\u2019s official specification, which guarantees it can easily stay up\nto date! We do this using an EMURGO-written tool called ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Emurgo/cddl-codegen"},"cddl-codegen"),"\nwhich can be re-used for other tasks such as automatically generating a\nRust library for Cardano metadata specifications!"),(0,i.kt)("p",null,"It is also very easy to create scripts in Rust or WASM to share with\nstake pools, or even embed inside an online tool! No more crazy\ncardano-cli bash scripts!"),(0,i.kt)("p",null,"Powerful and flexible enough to be used to power wallets and exchanges!\n(Yes, it\u2019s used in production!)"),(0,i.kt)("h2",{id:"documentation"},"Documentation"),(0,i.kt)("p",null,"This library generates both ",(0,i.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/"},"Typescript")," and ",(0,i.kt)("a",{parentName:"p",href:"https://flow.org/"},"Flow")," type definitions,\nso it\u2019s often easiest to see what is possible by just looking at the\ntypes! You can find the Flow types ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Emurgo/cardano-serialization-lib/blob/master/rust/pkg/cardano_serialization_lib.js.flow"},"here"),"."),(0,i.kt)("p",null,"You can also look in the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Emurgo/cardano-serialization-lib/tree/master/example"},"example")," folder to see how to use this library from Typescript or just experiment with the library."),(0,i.kt)("h2",{id:"what-about-other-versions-of-cardano"},"What about other versions of Cardano?"),(0,i.kt)("p",null,"If you are looking for legacy bindings, you can find them at the\nfollowing:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/js-cardano-wasm/tree/master/cardano-wallet"},"Byron WASM bindings")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/emurgo/js-chain-libs"},"Jormungandr WASM bindings"))),(0,i.kt)("h2",{id:"original-binary-specifications"},"Original binary specifications"),(0,i.kt)("p",null,"Here are the location of the original ",(0,i.kt)("a",{parentName:"p",href:"http://cbor.io/tools.html"},"CDDL")," specifications:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Byron: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/cardano-ledger-specs/tree/master/byron/cddl-spec"},"link")),(0,i.kt)("li",{parentName:"ul"},"Shelley: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/cardano-ledger-specs/tree/master/shelley/chain-and-ledger/shelley-spec-ledger-test/cddl-files"},"link")),(0,i.kt)("li",{parentName:"ul"},"Mary: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/input-output-hk/cardano-ledger-specs/tree/master/shelley-ma/shelley-ma-test/cddl-files"},"link"))),(0,i.kt)("h2",{id:"building"},"Building"),(0,i.kt)("p",null,"If you need to install Rust, do the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"curl https://sh.rustup.rs -sSf | sh -s -- -y\necho 'export PATH=$HOME/.cargo/bin/:$PATH' >> $BASH_ENV\nrustup install stable\nrustup target add wasm32-unknown-unknown --toolchain stable\ncurl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh\n")),(0,i.kt)("p",null,"To build this repository, do the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"git submodule update --init --recursive\nnvm use\nnpm install\nnpm run rust:build-nodejs\n")),(0,i.kt)("h2",{id:"testing"},"Testing"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"npm run rust:test\n")),(0,i.kt)("h2",{id:"publishing"},"Publishing"),(0,i.kt)("p",null,"To publish a new version to ",(0,i.kt)("a",{parentName:"p",href:"https://crates.io"},"crates.io")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"npm run rust:publish\n")),(0,i.kt)("p",null,"To publish new versions to NPM (only needed if you are an admin of this project)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"npm run js:publish-nodejs\nnpm run js:publish-browser\nnpm run js:publish-asm\n")))}c.isMDXComponent=!0}}]);